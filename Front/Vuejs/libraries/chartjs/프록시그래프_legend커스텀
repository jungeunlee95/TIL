```js

<template>
    <div class="card p-3">
        <div>
            <div class="row">
                <div class="col">
                    <b-form inline class="float-right">
                        <b-form-select v-model="selectRange">
                            <option v-for="range in $store.state.RangeOptions" v-bind:key="range.id" :value=range.value>
                                {{range.text}}
                            </option>
                        </b-form-select>
                    </b-form>
                </div>
            </div>
            <div class="text-center">
                <b-spinner v-if="loading" label="Loading..."></b-spinner>
                <b-row>
                    <b-col>
                        <canvas id="myProxyFBChart" width="500" height="400"></canvas>
                    </b-col>
                    <b-col cols="3" class=" my-auto">
                        <div id="my-proxy-fb-legend" class="my-proxy-fb-legend mx-auto"
                             style="width: 380px"></div>
                    </b-col>
                </b-row>
            </div>
        </div>
    </div>
</template>

<script>
import * as Api from '@/api/index.js'
import * as moment from 'moment'
import Chart from 'chart.js'

export default {
    name: 'ProxyFrontendBackend',
    props: {
        regionCode: String,
        clusterId: Number,
        proxyFrontend: String,
        proxyBackend: String
    },
    data: function () {
        return {
            selectRange: '7:day:2400',
            loading: false,
            selectTime: 7,
            selectType: 'day',
            selectStep: 2400,
            chart: null
        }
    },
    methods: {
        pollData() {
            this.polling = setInterval(() => {
                this.getFrontendGraph()
            }, 30000)
        },
        getFrontendGraph() {
            if (!this.regionCode || !this.clusterId) return
            let obj = this
            if (obj.chart !== null) obj.chart.destroy()

            obj.loading = true

            let queryParam = {
                query: encodeURIComponent('sum(irate(haproxy_frontend_http_responses_total{frontend=~"' + this.proxyFrontend + '",code=~"1xx|2xx|3xx|4xx|5xx|other"}[5m])) by (code)'),
                start: moment().subtract(this.selectTime, this.selectType).unix(),
                end: moment().unix(),
                legendFormat: 'code',
                step: this.selectStep
            }
            Api.get('/region/' + this.regionCode + '/cluster/' + this.clusterId + '/prometheus/queryRange', queryParam).then(function (response) {
                if (response.status === 200) {
                    let matrix = response.data._embedded.matrix
                    // let matrix = [{"name":"1xx","data":[[1650345573000,0.0],[1650345653000,0.0],[1650345733000,0.0],[1650345813000,0.0],[1650345893000,0.0],[1650345973000,0.0],[1650346053000,0.0],[1650346133000,0.0],[1650346213000,0.0],[1650346293000,0.0],[1650346373000,0.0],[1650346453000,0.0],[1650346533000,0.0],[1650346613000,0.0],[1650346693000,0.0],[1650346773000,0.0],[1650346853000,0.0],[1650346933000,0.0],[1650347013000,0.0],[1650347093000,0.0],[1650347173000,0.0],[1650347253000,0.0],[1650347333000,0.0],[1650347413000,0.0],[1650347493000,0.0],[1650347573000,0.0],[1650347653000,0.0],[1650347733000,0.0],[1650347813000,0.0],[1650347893000,0.0],[1650347973000,0.0],[1650348053000,0.0],[1650348133000,0.0],[1650348213000,0.0],[1650348293000,0.0],[1650348373000,0.0],[1650348453000,0.0],[1650348533000,0.0],[1650348613000,0.0],[1650348693000,0.0],[1650348773000,0.0],[1650348853000,0.0],[1650348933000,0.0],[1650349013000,0.0],[1650349093000,0.0],[1650349173000,0.0],[1650349253000,0.0],[1650349333000,0.0],[1650349413000,0.0],[1650349493000,0.0],[1650349573000,0.0],[1650349653000,0.0],[1650349733000,0.0],[1650349813000,0.0],[1650349893000,0.0],[1650349973000,0.0],[1650350053000,0.0],[1650350133000,0.0],[1650350213000,0.0],[1650350293000,0.0],[1650350373000,0.0],[1650350453000,0.0],[1650350533000,0.0],[1650350613000,0.0],[1650350693000,0.0],[1650350773000,0.0],[1650350853000,0.0],[1650350933000,0.0],[1650351013000,0.0],[1650351093000,0.0],[1650351173000,0.0],[1650351253000,0.0],[1650351333000,0.0],[1650351413000,0.0],[1650351493000,0.0],[1650351573000,0.0],[1650351653000,0.0],[1650351733000,0.0],[1650351813000,0.0],[1650351893000,0.0],[1650351973000,0.0],[1650352053000,0.0],[1650352133000,0.0],[1650352213000,0.0],[1650352293000,0.0],[1650352373000,0.0],[1650352453000,0.0],[1650352533000,0.0],[1650352613000,0.0],[1650352693000,0.0],[1650352773000,0.0],[1650352853000,0.0],[1650352933000,0.0],[1650353013000,0.0],[1650353093000,0.0],[1650353173000,0.0],[1650353253000,0.0],[1650353333000,0.0],[1650353413000,0.0],[1650353493000,0.0],[1650353573000,0.0],[1650353653000,0.0],[1650353733000,0.0],[1650353813000,0.0],[1650353893000,0.0],[1650353973000,0.0],[1650354053000,0.0],[1650354133000,0.0],[1650354213000,0.0],[1650354293000,0.0],[1650354373000,0.0],[1650354453000,0.0],[1650354533000,0.0],[1650354613000,0.0],[1650354693000,0.0],[1650354773000,0.0],[1650354853000,0.0],[1650354933000,0.0],[1650355013000,0.0],[1650355093000,0.0],[1650355173000,0.0],[1650355253000,0.0],[1650355333000,0.0],[1650355413000,0.0],[1650355493000,0.0],[1650355573000,0.0],[1650355653000,0.0],[1650355733000,0.0],[1650355813000,0.0],[1650355893000,0.0],[1650355973000,0.0],[1650356053000,0.0],[1650356133000,0.0],[1650356213000,0.0],[1650356293000,0.0],[1650356373000,0.0]]},{"name":"2xx","data":[[1650345573000,17.351469],[1650345653000,18.43339],[1650345733000,19.86654],[1650345813000,19.1835],[1650345893000,21.366667],[1650345973000,15.699954],[1650346053000,18.40076],[1650346133000,24.56653],[1650346213000,27.200104],[1650346293000,61.914036],[1650346373000,76.18659],[1650346453000,69.9669],[1650346533000,80.49981],[1650346613000,63.066853],[1650346693000,20.651518],[1650346773000,12.628952],[1650346853000,14.593321],[1650346933000,11.666229],[1650347013000,13.13375],[1650347093000,14.350151],[1650347173000,17.06667],[1650347253000,16.066633],[1650347333000,10.249654],[1650347413000,15.6829815],[1650347493000,24.56809],[1650347573000,12.283338],[1650347653000,12.398919],[1650347733000,11.517907],[1650347813000,13.383263],[1650347893000,17.650524],[1650347973000,10.816642],[1650348053000,13.483247],[1650348133000,15.166237],[1650348213000,11.517194],[1650348293000,20.91671],[1650348373000,11.516818],[1650348453000,13.882744],[1650348533000,19.1],[1650348613000,19.833284],[1650348693000,18.49856],[1650348773000,16.134129],[1650348853000,16.317707],[1650348933000,18.716175],[1650349013000,21.750696],[1650349093000,13.966626],[1650349173000,14.333338],[1650349253000,17.883379],[1650349333000,12.650042],[1650349413000,15.133329],[1650349493000,12.566667],[1650349573000,15.899152],[1650349653000,19.016867],[1650349733000,13.60065],[1650349813000,14.564437],[1650349893000,14.8182335],[1650349973000,15.666127],[1650350053000,11.033075],[1650350133000,12.933763],[1650350213000,15.366625],[1650350293000,14.433333],[1650350373000,11.533857],[1650350453000,16.16594],[1650350533000,16.78441],[1650350613000,16.883589],[1650350693000,13.600046],[1650350773000,18.25],[1650350853000,14.049618],[1650350933000,13.400013],[1650351013000,17.610773],[1650351093000,20.616428],[1650351173000,14.166916],[1650351253000,19.51678],[1650351333000,24.98265],[1650351413000,13.833663],[1650351493000,13.916566],[1650351573000,13.61675],[1650351653000,13.999967],[1650351733000,31.033297],[1650351813000,27.79754],[1650351893000,19.518927],[1650351973000,14.950874],[1650352053000,14.116205],[1650352133000,14.067178],[1650352213000,10.516798],[1650352293000,7.7833333],[1650352373000,11.816667],[1650352453000,16.466154],[1650352533000,12.11704],[1650352613000,12.283334],[1650352693000,17.633192],[1650352773000,11.933305],[1650352853000,11.116804],[1650352933000,14.866634],[1650353013000,14.399198],[1650353093000,30.116903],[1650353173000,21.433332],[1650353253000,13.899973],[1650353333000,18.66673],[1650353413000,16.049963],[1650353493000,19.516617],[1650353573000,18.041046],[1650353653000,17.75005],[1650353733000,9.0],[1650353813000,16.833088],[1650353893000,13.249908],[1650353973000,13.3331],[1650354053000,16.000296],[1650354133000,13.0170965],[1650354213000,14.699717],[1650354293000,15.33372],[1650354373000,14.617587],[1650354453000,12.949933],[1650354533000,19.30014],[1650354613000,21.616291],[1650354693000,18.183369],[1650354773000,15.516624],[1650354853000,23.516666],[1650354933000,19.316668],[1650355013000,9.383416],[1650355093000,15.233907],[1650355173000,17.133236],[1650355253000,14.032654],[1650355333000,11.832933],[1650355413000,13.550539],[1650355493000,12.783295],[1650355573000,18.350042],[1650355653000,15.700556],[1650355733000,17.833334],[1650355813000,12.083338],[1650355893000,18.600126],[1650355973000,18.358984],[1650356053000,13.335913],[1650356133000,12.683295],[1650356213000,14.883424],[1650356293000,19.383945],[1650356373000,11.531707]]},{"name":"3xx","data":[[1650345573000,1.1667603],[1650345653000,1.7666677],[1650345733000,1.3166661],[1650345813000,1.4166791],[1650345893000,1.4],[1650345973000,0.83333194],[1650346053000,1.4000722],[1650346133000,0.5333294],[1650346213000,0.7333411],[1650346293000,1.6665833],[1650346373000,1.4000211],[1650346453000,0.433335],[1650346533000,0.43333277],[1650346613000,0.5166639],[1650346693000,1.5001328],[1650346773000,1.1624092],[1650346853000,0.7050101],[1650346933000,0.68330556],[1650347013000,0.7333483],[1650347093000,0.56667],[1650347173000,1.033332],[1650347253000,2.0999942],[1650347333000,1.2833034],[1650347413000,0.8666698],[1650347493000,1.4000728],[1650347573000,1.2666689],[1650347653000,0.33331668],[1650347733000,0.733405],[1650347813000,0.8499992],[1650347893000,1.9333789],[1650347973000,0.68334055],[1650348053000,0.5000075],[1650348133000,0.48332584],[1650348213000,0.6166886],[1650348293000,1.9166706],[1650348373000,0.7166764],[1650348453000,2.616603],[1650348533000,0.6166667],[1650348613000,0.58333224],[1650348693000,0.98327833],[1650348773000,0.66669667],[1650348853000,2.0667648],[1650348933000,0.86663526],[1650349013000,1.06671],[1650349093000,0.66666526],[1650349173000,0.6166628],[1650349253000,0.75000113],[1650349333000,0.6666675],[1650349413000,0.8666689],[1650349493000,0.8666667],[1650349573000,1.0333042],[1650349653000,0.91660446],[1650349733000,0.7166878],[1650349813000,1.6664298],[1650349893000,0.48334834],[1650349973000,0.49998],[1650350053000,0.3499875],[1650350133000,0.41668335],[1650350213000,0.48333305],[1650350293000,1.0333333],[1650350373000,0.81667614],[1650350453000,0.7832725],[1650350533000,0.8667097],[1650350613000,1.733325],[1650350693000,0.6500011],[1650350773000,0.73333335],[1650350853000,0.5333175],[1650350933000,0.6333303],[1650351013000,0.47064716],[1650351093000,0.6833183],[1650351173000,0.9000242],[1650351253000,0.8333403],[1650351333000,0.99996305],[1650351413000,1.2666861],[1650351493000,0.8499944],[1650351573000,1.7333505],[1650351653000,0.899995],[1650351733000,0.63332915],[1650351813000,1.2832234],[1650351893000,1.1335187],[1650351973000,0.76671976],[1650352053000,0.9333086],[1650352133000,1.4000303],[1650352213000,0.8666736],[1650352293000,1.0333333],[1650352373000,0.5],[1650352453000,1.3999475],[1650352533000,0.91669947],[1650352613000,1.3666667],[1650352693000,0.5666608],[1650352773000,0.94999695],[1650352853000,0.6333453],[1650352933000,0.8333311],[1650353013000,2.3165822],[1650353093000,1.3833467],[1650353173000,1.7333333],[1650353253000,0.6333314],[1650353333000,0.9500022],[1650353413000,1.3666631],[1650353493000,1.1166614],[1650353573000,0.54474807],[1650353653000,1.401066],[1650353733000,0.8],[1650353813000,0.9499819],[1650353893000,1.4833325],[1650353973000,1.0333117],[1650354053000,1.3000197],[1650354133000,1.5333598],[1650354213000,1.1666317],[1650354293000,0.78334695],[1650354373000,0.9333511],[1650354453000,0.8833283],[1650354533000,1.1000088],[1650354613000,0.8833086],[1650354693000,0.53333473],[1650354773000,0.38333306],[1650354853000,0.55],[1650354933000,0.8666667],[1650355013000,0.61668026],[1650355093000,0.65004444],[1650355173000,0.6833314],[1650355253000,0.43331388],[1650355333000,0.59998447],[1650355413000,0.46669194],[1650355493000,0.69999665],[1650355573000,0.38333416],[1650355653000,0.31667057],[1650355733000,0.33333334],[1650355813000,0.7166664],[1650355893000,0.9666753],[1650355973000,1.3142062],[1650356053000,0.8025457],[1650356133000,0.33333194],[1650356213000,0.6333372],[1650356293000,2.450043],[1650356373000,1.549799]]},{"name":"4xx","data":[[1650345573000,1.1500542],[1650345653000,5.9666905],[1650345733000,2.1166573],[1650345813000,7.9833527],[1650345893000,1.75],[1650345973000,0.3166661],[1650346053000,2.1168857],[1650346133000,3.199973],[1650346213000,0.6500003],[1650346293000,2.2332335],[1650346373000,2.7999787],[1650346453000,0.6333336],[1650346533000,0.033333056],[1650346613000,25.350058],[1650346693000,1.1333247],[1650346773000,0.3248263],[1650346853000,1.6766869],[1650346933000,0.11666278],[1650347013000,2.9169154],[1650347093000,6.766671],[1650347173000,0.99999946],[1650347253000,0.78333336],[1650347333000,1.5499933],[1650347413000,0.26665473],[1650347493000,0.20001417],[1650347573000,0.13333389],[1650347653000,0.3999789],[1650347733000,0.36668834],[1650347813000,0.16666639],[1650347893000,7.083648],[1650347973000,0.2499975],[1650348053000,0.04999972],[1650348133000,0.21665584],[1650348213000,0.3333403],[1650348293000,0.96666723],[1650348373000,0.20000306],[1650348453000,0.3666486],[1650348533000,1.4166666],[1650348613000,0.6166714],[1650348693000,0.23332334],[1650348773000,3.4671268],[1650348853000,0.15001778],[1650348933000,0.16666694],[1650349013000,6.2504334],[1650349093000,0.14999944],[1650349173000,0.18333277],[1650349253000,0.6500086],[1650349333000,0.11666694],[1650349413000,0.78333306],[1650349493000,0.15],[1650349573000,0.18331861],[1650349653000,0.16667111],[1650349733000,0.4333386],[1650349813000,0.38327056],[1650349893000,0.80012864],[1650349973000,2.1166666],[1650350053000,0.05],[1650350133000,0.98333335],[1650350213000,0.39999917],[1650350293000,1.1166667],[1650350373000,0.116676114],[1650350453000,0.81666225],[1650350533000,0.35001612],[1650350613000,2.5001748],[1650350693000,1.9000136],[1650350773000,0.85],[1650350853000,0.98330444],[1650350933000,1.016633],[1650351013000,1.0059412],[1650351093000,5.633245],[1650351173000,2.2333703],[1650351253000,3.916683],[1650351333000,3.599841],[1650351413000,4.4334188],[1650351493000,5.333284],[1650351573000,6.7833815],[1650351653000,4.7333264],[1650351733000,2.0499964],[1650351813000,1.8664457],[1650351893000,1.4668148],[1650351973000,0.5333575],[1650352053000,0.48332444],[1650352133000,0.050003335],[1650352213000,0.85005254],[1650352293000,1.5833334],[1650352373000,0.68333334],[1650352453000,0.033333335],[1650352533000,0.33333945],[1650352613000,0.21666667],[1650352693000,0.79998446],[1650352773000,0.2333325],[1650352853000,0.08333305],[1650352933000,0.48333305],[1650353013000,0.05],[1650353093000,1.0168034],[1650353173000,0.38333333],[1650353253000,0.4333314],[1650353333000,0.05],[1650353413000,0.14999917],[1650353493000,5.0499516],[1650353573000,18.281027],[1650353653000,16.031809],[1650353733000,0.11666667],[1650353813000,0.14999361],[1650353893000,0.4500025],[1650353973000,0.09999833],[1650354053000,0.41668972],[1650354133000,0.050000276],[1650354213000,3.099998],[1650354293000,4.783337],[1650354373000,3.4667645],[1650354453000,0.083333336],[1650354533000,1.2666764],[1650354613000,2.0499208],[1650354693000,2.7500134],[1650354773000,2.449992],[1650354853000,1.0166667],[1650354933000,1.0833334],[1650355013000,2.0000048],[1650355093000,0.11666639],[1650355173000,0.08333278],[1650355253000,1.7999128],[1650355333000,0.15],[1650355413000,0.31666666],[1650355493000,0.66666526],[1650355573000,0.41666666],[1650355653000,0.28333724],[1650355733000,3.0833333],[1650355813000,0.28333443],[1650355893000,7.9167347],[1650355973000,2.4333265],[1650356053000,1.4717578],[1650356133000,0.35],[1650356213000,0.40000054],[1650356293000,0.33334446],[1650356373000,0.2666278]]},{"name":"5xx","data":[[1650345573000,0.0],[1650345653000,0.0],[1650345733000,0.0],[1650345813000,0.0],[1650345893000,0.0],[1650345973000,0.0],[1650346053000,0.01667028],[1650346133000,0.016666388],[1650346213000,0.0],[1650346293000,0.0],[1650346373000,0.0],[1650346453000,0.05],[1650346533000,0.0],[1650346613000,0.0],[1650346693000,0.0],[1650346773000,0.0],[1650346853000,0.0],[1650346933000,0.0],[1650347013000,0.0],[1650347093000,0.0],[1650347173000,0.0],[1650347253000,0.0],[1650347333000,0.016666668],[1650347413000,0.0],[1650347493000,0.0],[1650347573000,0.0],[1650347653000,0.0],[1650347733000,0.0],[1650347813000,0.0],[1650347893000,0.0],[1650347973000,0.0],[1650348053000,0.0],[1650348133000,0.0],[1650348213000,0.0],[1650348293000,0.016666668],[1650348373000,0.0],[1650348453000,0.0],[1650348533000,0.0],[1650348613000,0.0],[1650348693000,0.016666668],[1650348773000,0.0],[1650348853000,0.0],[1650348933000,0.0],[1650349013000,0.0],[1650349093000,0.0],[1650349173000,0.0],[1650349253000,0.0],[1650349333000,0.0],[1650349413000,0.0],[1650349493000,0.0],[1650349573000,0.0],[1650349653000,0.0],[1650349733000,0.0],[1650349813000,0.0],[1650349893000,0.0],[1650349973000,0.016666668],[1650350053000,0.0],[1650350133000,0.0],[1650350213000,0.0],[1650350293000,0.0],[1650350373000,0.0],[1650350453000,0.0],[1650350533000,0.0],[1650350613000,0.016666668],[1650350693000,0.0],[1650350773000,0.0],[1650350853000,0.0],[1650350933000,0.0],[1650351013000,0.0],[1650351093000,0.0],[1650351173000,0.0],[1650351253000,0.016666668],[1650351333000,0.016666668],[1650351413000,0.0],[1650351493000,0.0],[1650351573000,0.0],[1650351653000,0.0],[1650351733000,0.0],[1650351813000,0.0],[1650351893000,0.033333335],[1650351973000,0.0],[1650352053000,0.0],[1650352133000,0.0],[1650352213000,0.0],[1650352293000,0.0],[1650352373000,0.0],[1650352453000,0.0],[1650352533000,0.0],[1650352613000,0.016666668],[1650352693000,0.0],[1650352773000,0.0],[1650352853000,0.0],[1650352933000,0.016666388],[1650353013000,0.0],[1650353093000,0.0],[1650353173000,0.0],[1650353253000,0.0],[1650353333000,0.0],[1650353413000,0.0],[1650353493000,0.0],[1650353573000,0.0],[1650353653000,0.0],[1650353733000,0.05],[1650353813000,0.0],[1650353893000,0.0],[1650353973000,0.0],[1650354053000,0.0],[1650354133000,0.0],[1650354213000,0.0],[1650354293000,0.0],[1650354373000,0.016666668],[1650354453000,0.0],[1650354533000,0.016666668],[1650354613000,0.0],[1650354693000,0.0],[1650354773000,0.0],[1650354853000,0.0],[1650354933000,0.0],[1650355013000,0.0],[1650355093000,0.0],[1650355173000,0.0],[1650355253000,0.049994167],[1650355333000,0.0],[1650355413000,0.0],[1650355493000,0.0],[1650355573000,0.0],[1650355653000,0.0],[1650355733000,0.0],[1650355813000,0.0],[1650355893000,0.0],[1650355973000,0.0],[1650356053000,0.0],[1650356133000,0.0],[1650356213000,0.0],[1650356293000,0.0],[1650356373000,0.0]]},{"name":"other","data":[[1650345573000,0.0],[1650345653000,0.0],[1650345733000,0.0],[1650345813000,0.0],[1650345893000,0.0],[1650345973000,0.0],[1650346053000,0.0],[1650346133000,0.0],[1650346213000,0.0],[1650346293000,0.0],[1650346373000,0.0],[1650346453000,0.0],[1650346533000,0.0],[1650346613000,0.0],[1650346693000,0.0],[1650346773000,0.0],[1650346853000,0.0],[1650346933000,0.0],[1650347013000,0.0],[1650347093000,0.0],[1650347173000,0.0],[1650347253000,0.0],[1650347333000,0.0],[1650347413000,0.0],[1650347493000,0.0],[1650347573000,0.0],[1650347653000,0.0],[1650347733000,0.0],[1650347813000,0.0],[1650347893000,0.0],[1650347973000,0.0],[1650348053000,0.0],[1650348133000,0.0],[1650348213000,0.0],[1650348293000,0.0],[1650348373000,0.0],[1650348453000,0.0],[1650348533000,0.0],[1650348613000,0.0],[1650348693000,0.0],[1650348773000,0.0],[1650348853000,0.0],[1650348933000,0.0],[1650349013000,0.0],[1650349093000,0.0],[1650349173000,0.0],[1650349253000,0.0],[1650349333000,0.0],[1650349413000,0.0],[1650349493000,0.0],[1650349573000,0.0],[1650349653000,0.0],[1650349733000,0.0],[1650349813000,0.0],[1650349893000,0.0],[1650349973000,0.0],[1650350053000,0.0],[1650350133000,0.0],[1650350213000,0.0],[1650350293000,0.0],[1650350373000,0.0],[1650350453000,0.0],[1650350533000,0.0],[1650350613000,0.0],[1650350693000,0.0],[1650350773000,0.0],[1650350853000,0.0],[1650350933000,0.0],[1650351013000,0.0],[1650351093000,0.0],[1650351173000,0.0],[1650351253000,0.0],[1650351333000,0.0],[1650351413000,0.0],[1650351493000,0.0],[1650351573000,0.0],[1650351653000,0.0],[1650351733000,0.0],[1650351813000,0.0],[1650351893000,0.0],[1650351973000,0.0],[1650352053000,0.0],[1650352133000,0.0],[1650352213000,0.0],[1650352293000,0.0],[1650352373000,0.0],[1650352453000,0.0],[1650352533000,0.0],[1650352613000,0.0],[1650352693000,0.0],[1650352773000,0.0],[1650352853000,0.0],[1650352933000,0.0],[1650353013000,0.0],[1650353093000,0.0],[1650353173000,0.0],[1650353253000,0.0],[1650353333000,0.0],[1650353413000,0.0],[1650353493000,0.0],[1650353573000,0.0],[1650353653000,0.0],[1650353733000,0.0],[1650353813000,0.0],[1650353893000,0.0],[1650353973000,0.0],[1650354053000,0.0],[1650354133000,0.0],[1650354213000,0.0],[1650354293000,0.0],[1650354373000,0.0],[1650354453000,0.0],[1650354533000,0.0],[1650354613000,0.0],[1650354693000,0.0],[1650354773000,0.0],[1650354853000,0.0],[1650354933000,0.0],[1650355013000,0.0],[1650355093000,0.0],[1650355173000,0.0],[1650355253000,0.0],[1650355333000,0.0],[1650355413000,0.0],[1650355493000,0.0],[1650355573000,0.0],[1650355653000,0.0],[1650355733000,0.0],[1650355813000,0.0],[1650355893000,0.0],[1650355973000,0.0],[1650356053000,0.0],[1650356133000,0.0],[1650356213000,0.0],[1650356293000,0.0],[1650356373000,0.0]]}]
                    const labels = []
                    const datasets = []
                    matrix.forEach((item, index) => {
                        if (index === 0) {
                            // set labels
                            item.data.forEach(item => {
                                labels.push(item[0])
                            })
                        }
                        let tempData = []
                        item.data.forEach(item => {
                            tempData.push(item[1])
                        })
                        let color = '#806eb7'
                        switch (item.name) {
                            case '1xx':
                                color = '#6ed0e0'
                                break;
                            case '2xx':
                                color = '#7eb26d'
                                break;
                            case '3xx':
                                color = '#1f78c1'
                                break;
                            case '4xx':
                                color = '#cca300'
                                break;
                            case '5xx':
                                color = '#890f02'
                                break;
                        }
                        datasets.push({
                            label: 'frontend ' + item.name,
                            fill: false,
                            borderColor: color,
                            backgroundColor: color,
                            data: tempData,
                            pointRadius: 0
                        })
                    })

                    // backend
                    let queryParam2 = {
                        query: encodeURIComponent('sum(irate(haproxy_backend_http_responses_total{backend=~"' + obj.proxyBackend + '",code=~"1xx|2xx|3xx|4xx|5xx|other"}[5m])) by (code)'),
                        start: moment().subtract(obj.selectTime, obj.selectType).unix(),
                        end: moment().unix(),
                        legendFormat: 'code',
                        step: obj.selectStep
                    }
                    Api.get('/region/' + obj.regionCode + '/cluster/' + obj.clusterId + '/prometheus/queryRange', queryParam2).then(function (response) {
                        if (response.status === 200) {
                            let matrix = response.data._embedded.matrix
                            // let matrix = [{"name":"1xx","data":[[1650345573000,0.0],[1650345653000,0.0],[1650345733000,0.0],[1650345813000,0.0],[1650345893000,0.0],[1650345973000,0.0],[1650346053000,0.0],[1650346133000,0.0],[1650346213000,0.0],[1650346293000,0.0],[1650346373000,0.0],[1650346453000,0.0],[1650346533000,0.0],[1650346613000,0.0],[1650346693000,0.0],[1650346773000,0.0],[1650346853000,0.0],[1650346933000,0.0],[1650347013000,0.0],[1650347093000,0.0],[1650347173000,0.0],[1650347253000,0.0],[1650347333000,0.0],[1650347413000,0.0],[1650347493000,0.0],[1650347573000,0.0],[1650347653000,0.0],[1650347733000,0.0],[1650347813000,0.0],[1650347893000,0.0],[1650347973000,0.0],[1650348053000,0.0],[1650348133000,0.0],[1650348213000,0.0],[1650348293000,0.0],[1650348373000,0.0],[1650348453000,0.0],[1650348533000,0.0],[1650348613000,0.0],[1650348693000,0.0],[1650348773000,0.0],[1650348853000,0.0],[1650348933000,0.0],[1650349013000,0.0],[1650349093000,0.0],[1650349173000,0.0],[1650349253000,0.0],[1650349333000,0.0],[1650349413000,0.0],[1650349493000,0.0],[1650349573000,0.0],[1650349653000,0.0],[1650349733000,0.0],[1650349813000,0.0],[1650349893000,0.0],[1650349973000,0.0],[1650350053000,0.0],[1650350133000,0.0],[1650350213000,0.0],[1650350293000,0.0],[1650350373000,0.0],[1650350453000,0.0],[1650350533000,0.0],[1650350613000,0.0],[1650350693000,0.0],[1650350773000,0.0],[1650350853000,0.0],[1650350933000,0.0],[1650351013000,0.0],[1650351093000,0.0],[1650351173000,0.0],[1650351253000,0.0],[1650351333000,0.0],[1650351413000,0.0],[1650351493000,0.0],[1650351573000,0.0],[1650351653000,0.0],[1650351733000,0.0],[1650351813000,0.0],[1650351893000,0.0],[1650351973000,0.0],[1650352053000,0.0],[1650352133000,0.0],[1650352213000,0.0],[1650352293000,0.0],[1650352373000,0.0],[1650352453000,0.0],[1650352533000,0.0],[1650352613000,0.0],[1650352693000,0.0],[1650352773000,0.0],[1650352853000,0.0],[1650352933000,0.0],[1650353013000,0.0],[1650353093000,0.0],[1650353173000,0.0],[1650353253000,0.0],[1650353333000,0.0],[1650353413000,0.0],[1650353493000,0.0],[1650353573000,0.0],[1650353653000,0.0],[1650353733000,0.0],[1650353813000,0.0],[1650353893000,0.0],[1650353973000,0.0],[1650354053000,0.0],[1650354133000,0.0],[1650354213000,0.0],[1650354293000,0.0],[1650354373000,0.0],[1650354453000,0.0],[1650354533000,0.0],[1650354613000,0.0],[1650354693000,0.0],[1650354773000,0.0],[1650354853000,0.0],[1650354933000,0.0],[1650355013000,0.0],[1650355093000,0.0],[1650355173000,0.0],[1650355253000,0.0],[1650355333000,0.0],[1650355413000,0.0],[1650355493000,0.0],[1650355573000,0.0],[1650355653000,0.0],[1650355733000,0.0],[1650355813000,0.0],[1650355893000,0.0],[1650355973000,0.0],[1650356053000,0.0],[1650356133000,0.0],[1650356213000,0.0],[1650356293000,0.0],[1650356373000,0.0]]},{"name":"2xx","data":[[1650345573000,17.351469],[1650345653000,18.43339],[1650345733000,19.86654],[1650345813000,19.1835],[1650345893000,21.366667],[1650345973000,15.699954],[1650346053000,18.40076],[1650346133000,24.56653],[1650346213000,27.200104],[1650346293000,61.914036],[1650346373000,76.18659],[1650346453000,69.9669],[1650346533000,80.49981],[1650346613000,63.066853],[1650346693000,20.651518],[1650346773000,12.628952],[1650346853000,14.593321],[1650346933000,11.666229],[1650347013000,13.13375],[1650347093000,14.350151],[1650347173000,17.06667],[1650347253000,16.066633],[1650347333000,10.249654],[1650347413000,15.6829815],[1650347493000,24.56809],[1650347573000,12.283338],[1650347653000,12.398919],[1650347733000,11.517907],[1650347813000,13.383263],[1650347893000,17.650524],[1650347973000,10.816642],[1650348053000,13.483247],[1650348133000,15.166237],[1650348213000,11.517194],[1650348293000,20.91671],[1650348373000,11.516818],[1650348453000,13.882744],[1650348533000,19.1],[1650348613000,19.833284],[1650348693000,18.49856],[1650348773000,16.134129],[1650348853000,16.317707],[1650348933000,18.716175],[1650349013000,21.750696],[1650349093000,13.966626],[1650349173000,14.333338],[1650349253000,17.883379],[1650349333000,12.650042],[1650349413000,15.133329],[1650349493000,12.566667],[1650349573000,15.899152],[1650349653000,19.016867],[1650349733000,13.60065],[1650349813000,14.564437],[1650349893000,14.8182335],[1650349973000,15.666127],[1650350053000,11.033075],[1650350133000,12.933763],[1650350213000,15.366625],[1650350293000,14.433333],[1650350373000,11.533857],[1650350453000,16.16594],[1650350533000,16.78441],[1650350613000,16.883589],[1650350693000,13.600046],[1650350773000,18.25],[1650350853000,14.049618],[1650350933000,13.400013],[1650351013000,17.610773],[1650351093000,20.616428],[1650351173000,14.166916],[1650351253000,19.51678],[1650351333000,24.98265],[1650351413000,13.833663],[1650351493000,13.916566],[1650351573000,13.61675],[1650351653000,13.999967],[1650351733000,31.033297],[1650351813000,27.79754],[1650351893000,19.518927],[1650351973000,14.950874],[1650352053000,14.116205],[1650352133000,14.067178],[1650352213000,10.516798],[1650352293000,7.7833333],[1650352373000,11.816667],[1650352453000,16.466154],[1650352533000,12.11704],[1650352613000,12.283334],[1650352693000,17.633192],[1650352773000,11.933305],[1650352853000,11.116804],[1650352933000,14.866634],[1650353013000,14.399198],[1650353093000,30.116903],[1650353173000,21.433332],[1650353253000,13.899973],[1650353333000,18.66673],[1650353413000,16.049963],[1650353493000,19.516617],[1650353573000,18.041046],[1650353653000,17.75005],[1650353733000,9.0],[1650353813000,16.833088],[1650353893000,13.249908],[1650353973000,13.3331],[1650354053000,16.000296],[1650354133000,13.0170965],[1650354213000,14.699717],[1650354293000,15.33372],[1650354373000,14.617587],[1650354453000,12.949933],[1650354533000,19.30014],[1650354613000,21.616291],[1650354693000,18.183369],[1650354773000,15.516624],[1650354853000,23.516666],[1650354933000,19.316668],[1650355013000,9.383416],[1650355093000,15.233907],[1650355173000,17.133236],[1650355253000,14.032654],[1650355333000,11.832933],[1650355413000,13.550539],[1650355493000,12.783295],[1650355573000,18.350042],[1650355653000,15.700556],[1650355733000,17.833334],[1650355813000,12.083338],[1650355893000,18.600126],[1650355973000,18.358984],[1650356053000,13.335913],[1650356133000,12.683295],[1650356213000,14.883424],[1650356293000,19.383945],[1650356373000,11.531707]]},{"name":"3xx","data":[[1650345573000,1.1667603],[1650345653000,1.7666677],[1650345733000,1.3166661],[1650345813000,1.4166791],[1650345893000,1.4],[1650345973000,0.83333194],[1650346053000,1.4000722],[1650346133000,0.5333294],[1650346213000,0.7333411],[1650346293000,1.6665833],[1650346373000,1.4000211],[1650346453000,0.433335],[1650346533000,0.43333277],[1650346613000,0.5166639],[1650346693000,1.5001328],[1650346773000,1.1624092],[1650346853000,0.7050101],[1650346933000,0.68330556],[1650347013000,0.7333483],[1650347093000,0.56667],[1650347173000,1.033332],[1650347253000,2.0999942],[1650347333000,1.2833034],[1650347413000,0.8666698],[1650347493000,1.4000728],[1650347573000,1.2666689],[1650347653000,0.33331668],[1650347733000,0.733405],[1650347813000,0.8499992],[1650347893000,1.9333789],[1650347973000,0.68334055],[1650348053000,0.5000075],[1650348133000,0.48332584],[1650348213000,0.6166886],[1650348293000,1.9166706],[1650348373000,0.7166764],[1650348453000,2.616603],[1650348533000,0.6166667],[1650348613000,0.58333224],[1650348693000,0.98327833],[1650348773000,0.66669667],[1650348853000,2.0667648],[1650348933000,0.86663526],[1650349013000,1.06671],[1650349093000,0.66666526],[1650349173000,0.6166628],[1650349253000,0.75000113],[1650349333000,0.6666675],[1650349413000,0.8666689],[1650349493000,0.8666667],[1650349573000,1.0333042],[1650349653000,0.91660446],[1650349733000,0.7166878],[1650349813000,1.6664298],[1650349893000,0.48334834],[1650349973000,0.49998],[1650350053000,0.3499875],[1650350133000,0.41668335],[1650350213000,0.48333305],[1650350293000,1.0333333],[1650350373000,0.81667614],[1650350453000,0.7832725],[1650350533000,0.8667097],[1650350613000,1.733325],[1650350693000,0.6500011],[1650350773000,0.73333335],[1650350853000,0.5333175],[1650350933000,0.6333303],[1650351013000,0.47064716],[1650351093000,0.6833183],[1650351173000,0.9000242],[1650351253000,0.8333403],[1650351333000,0.99996305],[1650351413000,1.2666861],[1650351493000,0.8499944],[1650351573000,1.7333505],[1650351653000,0.899995],[1650351733000,0.63332915],[1650351813000,1.2832234],[1650351893000,1.1335187],[1650351973000,0.76671976],[1650352053000,0.9333086],[1650352133000,1.4000303],[1650352213000,0.8666736],[1650352293000,1.0333333],[1650352373000,0.5],[1650352453000,1.3999475],[1650352533000,0.91669947],[1650352613000,1.3666667],[1650352693000,0.5666608],[1650352773000,0.94999695],[1650352853000,0.6333453],[1650352933000,0.8333311],[1650353013000,2.3165822],[1650353093000,1.3833467],[1650353173000,1.7333333],[1650353253000,0.6333314],[1650353333000,0.9500022],[1650353413000,1.3666631],[1650353493000,1.1166614],[1650353573000,0.54474807],[1650353653000,1.401066],[1650353733000,0.8],[1650353813000,0.9499819],[1650353893000,1.4833325],[1650353973000,1.0333117],[1650354053000,1.3000197],[1650354133000,1.5333598],[1650354213000,1.1666317],[1650354293000,0.78334695],[1650354373000,0.9333511],[1650354453000,0.8833283],[1650354533000,1.1000088],[1650354613000,0.8833086],[1650354693000,0.53333473],[1650354773000,0.38333306],[1650354853000,0.55],[1650354933000,0.8666667],[1650355013000,0.61668026],[1650355093000,0.65004444],[1650355173000,0.6833314],[1650355253000,0.43331388],[1650355333000,0.59998447],[1650355413000,0.46669194],[1650355493000,0.69999665],[1650355573000,0.38333416],[1650355653000,0.31667057],[1650355733000,0.33333334],[1650355813000,0.7166664],[1650355893000,0.9666753],[1650355973000,1.3142062],[1650356053000,0.8025457],[1650356133000,0.33333194],[1650356213000,0.6333372],[1650356293000,2.450043],[1650356373000,1.549799]]},{"name":"4xx","data":[[1650345573000,1.1500542],[1650345653000,5.9666905],[1650345733000,2.1166573],[1650345813000,7.9833527],[1650345893000,1.75],[1650345973000,0.3166661],[1650346053000,2.1168857],[1650346133000,3.199973],[1650346213000,0.6500003],[1650346293000,2.2332335],[1650346373000,2.7999787],[1650346453000,0.6333336],[1650346533000,0.033333056],[1650346613000,25.350058],[1650346693000,1.1333247],[1650346773000,0.3248263],[1650346853000,1.6766869],[1650346933000,0.11666278],[1650347013000,2.9169154],[1650347093000,6.766671],[1650347173000,0.99999946],[1650347253000,0.78333336],[1650347333000,1.5499933],[1650347413000,0.26665473],[1650347493000,0.20001417],[1650347573000,0.13333389],[1650347653000,0.3999789],[1650347733000,0.36668834],[1650347813000,0.16666639],[1650347893000,7.083648],[1650347973000,0.2499975],[1650348053000,0.04999972],[1650348133000,0.21665584],[1650348213000,0.3333403],[1650348293000,0.96666723],[1650348373000,0.20000306],[1650348453000,0.3666486],[1650348533000,1.4166666],[1650348613000,0.6166714],[1650348693000,0.23332334],[1650348773000,3.4671268],[1650348853000,0.15001778],[1650348933000,0.16666694],[1650349013000,6.2504334],[1650349093000,0.14999944],[1650349173000,0.18333277],[1650349253000,0.6500086],[1650349333000,0.11666694],[1650349413000,0.78333306],[1650349493000,0.15],[1650349573000,0.18331861],[1650349653000,0.16667111],[1650349733000,0.4333386],[1650349813000,0.38327056],[1650349893000,0.80012864],[1650349973000,2.1166666],[1650350053000,0.05],[1650350133000,0.98333335],[1650350213000,0.39999917],[1650350293000,1.1166667],[1650350373000,0.116676114],[1650350453000,0.81666225],[1650350533000,0.35001612],[1650350613000,2.5001748],[1650350693000,1.9000136],[1650350773000,0.85],[1650350853000,0.98330444],[1650350933000,1.016633],[1650351013000,1.0059412],[1650351093000,5.633245],[1650351173000,2.2333703],[1650351253000,3.916683],[1650351333000,3.599841],[1650351413000,4.4334188],[1650351493000,5.333284],[1650351573000,6.7833815],[1650351653000,4.7333264],[1650351733000,2.0499964],[1650351813000,1.8664457],[1650351893000,1.4668148],[1650351973000,0.5333575],[1650352053000,0.48332444],[1650352133000,0.050003335],[1650352213000,0.85005254],[1650352293000,1.5833334],[1650352373000,0.68333334],[1650352453000,0.033333335],[1650352533000,0.33333945],[1650352613000,0.21666667],[1650352693000,0.79998446],[1650352773000,0.2333325],[1650352853000,0.08333305],[1650352933000,0.48333305],[1650353013000,0.05],[1650353093000,1.0168034],[1650353173000,0.38333333],[1650353253000,0.4333314],[1650353333000,0.05],[1650353413000,0.14999917],[1650353493000,5.0499516],[1650353573000,18.281027],[1650353653000,16.031809],[1650353733000,0.11666667],[1650353813000,0.14999361],[1650353893000,0.4500025],[1650353973000,0.09999833],[1650354053000,0.41668972],[1650354133000,0.050000276],[1650354213000,3.099998],[1650354293000,4.783337],[1650354373000,3.4667645],[1650354453000,0.083333336],[1650354533000,1.2666764],[1650354613000,2.0499208],[1650354693000,2.7500134],[1650354773000,2.449992],[1650354853000,1.0166667],[1650354933000,1.0833334],[1650355013000,2.0000048],[1650355093000,0.11666639],[1650355173000,0.08333278],[1650355253000,1.7999128],[1650355333000,0.15],[1650355413000,0.31666666],[1650355493000,0.66666526],[1650355573000,0.41666666],[1650355653000,0.28333724],[1650355733000,3.0833333],[1650355813000,0.28333443],[1650355893000,7.9167347],[1650355973000,2.4333265],[1650356053000,1.4717578],[1650356133000,0.35],[1650356213000,0.40000054],[1650356293000,0.33334446],[1650356373000,0.2666278]]},{"name":"5xx","data":[[1650345573000,0.0],[1650345653000,0.0],[1650345733000,0.0],[1650345813000,0.0],[1650345893000,0.0],[1650345973000,0.0],[1650346053000,0.01667028],[1650346133000,0.016666388],[1650346213000,0.0],[1650346293000,0.0],[1650346373000,0.0],[1650346453000,0.05],[1650346533000,0.0],[1650346613000,0.0],[1650346693000,0.0],[1650346773000,0.0],[1650346853000,0.0],[1650346933000,0.0],[1650347013000,0.0],[1650347093000,0.0],[1650347173000,0.0],[1650347253000,0.0],[1650347333000,0.016666668],[1650347413000,0.0],[1650347493000,0.0],[1650347573000,0.0],[1650347653000,0.0],[1650347733000,0.0],[1650347813000,0.0],[1650347893000,0.0],[1650347973000,0.0],[1650348053000,0.0],[1650348133000,0.0],[1650348213000,0.0],[1650348293000,0.016666668],[1650348373000,0.0],[1650348453000,0.0],[1650348533000,0.0],[1650348613000,0.0],[1650348693000,0.016666668],[1650348773000,0.0],[1650348853000,0.0],[1650348933000,0.0],[1650349013000,0.0],[1650349093000,0.0],[1650349173000,0.0],[1650349253000,0.0],[1650349333000,0.0],[1650349413000,0.0],[1650349493000,0.0],[1650349573000,0.0],[1650349653000,0.0],[1650349733000,0.0],[1650349813000,0.0],[1650349893000,0.0],[1650349973000,0.016666668],[1650350053000,0.0],[1650350133000,0.0],[1650350213000,0.0],[1650350293000,0.0],[1650350373000,0.0],[1650350453000,0.0],[1650350533000,0.0],[1650350613000,0.016666668],[1650350693000,0.0],[1650350773000,0.0],[1650350853000,0.0],[1650350933000,0.0],[1650351013000,0.0],[1650351093000,0.0],[1650351173000,0.0],[1650351253000,0.016666668],[1650351333000,0.016666668],[1650351413000,0.0],[1650351493000,0.0],[1650351573000,0.0],[1650351653000,0.0],[1650351733000,0.0],[1650351813000,0.0],[1650351893000,0.033333335],[1650351973000,0.0],[1650352053000,0.0],[1650352133000,0.0],[1650352213000,0.0],[1650352293000,0.0],[1650352373000,0.0],[1650352453000,0.0],[1650352533000,0.0],[1650352613000,0.016666668],[1650352693000,0.0],[1650352773000,0.0],[1650352853000,0.0],[1650352933000,0.016666388],[1650353013000,0.0],[1650353093000,0.0],[1650353173000,0.0],[1650353253000,0.0],[1650353333000,0.0],[1650353413000,0.0],[1650353493000,0.0],[1650353573000,0.0],[1650353653000,0.0],[1650353733000,0.05],[1650353813000,0.0],[1650353893000,0.0],[1650353973000,0.0],[1650354053000,0.0],[1650354133000,0.0],[1650354213000,0.0],[1650354293000,0.0],[1650354373000,0.016666668],[1650354453000,0.0],[1650354533000,0.016666668],[1650354613000,0.0],[1650354693000,0.0],[1650354773000,0.0],[1650354853000,0.0],[1650354933000,0.0],[1650355013000,0.0],[1650355093000,0.0],[1650355173000,0.0],[1650355253000,0.049994167],[1650355333000,0.0],[1650355413000,0.0],[1650355493000,0.0],[1650355573000,0.0],[1650355653000,0.0],[1650355733000,0.0],[1650355813000,0.0],[1650355893000,0.0],[1650355973000,0.0],[1650356053000,0.0],[1650356133000,0.0],[1650356213000,0.0],[1650356293000,0.0],[1650356373000,0.0]]},{"name":"other","data":[[1650345573000,0.0],[1650345653000,0.0],[1650345733000,0.0],[1650345813000,0.0],[1650345893000,0.0],[1650345973000,0.0],[1650346053000,0.0],[1650346133000,0.0],[1650346213000,0.0],[1650346293000,0.0],[1650346373000,0.0],[1650346453000,0.0],[1650346533000,0.0],[1650346613000,0.0],[1650346693000,0.0],[1650346773000,0.0],[1650346853000,0.0],[1650346933000,0.0],[1650347013000,0.0],[1650347093000,0.0],[1650347173000,0.0],[1650347253000,0.0],[1650347333000,0.0],[1650347413000,0.0],[1650347493000,0.0],[1650347573000,0.0],[1650347653000,0.0],[1650347733000,0.0],[1650347813000,0.0],[1650347893000,0.0],[1650347973000,0.0],[1650348053000,0.0],[1650348133000,0.0],[1650348213000,0.0],[1650348293000,0.0],[1650348373000,0.0],[1650348453000,0.0],[1650348533000,0.0],[1650348613000,0.0],[1650348693000,0.0],[1650348773000,0.0],[1650348853000,0.0],[1650348933000,0.0],[1650349013000,0.0],[1650349093000,0.0],[1650349173000,0.0],[1650349253000,0.0],[1650349333000,0.0],[1650349413000,0.0],[1650349493000,0.0],[1650349573000,0.0],[1650349653000,0.0],[1650349733000,0.0],[1650349813000,0.0],[1650349893000,0.0],[1650349973000,0.0],[1650350053000,0.0],[1650350133000,0.0],[1650350213000,0.0],[1650350293000,0.0],[1650350373000,0.0],[1650350453000,0.0],[1650350533000,0.0],[1650350613000,0.0],[1650350693000,0.0],[1650350773000,0.0],[1650350853000,0.0],[1650350933000,0.0],[1650351013000,0.0],[1650351093000,0.0],[1650351173000,0.0],[1650351253000,0.0],[1650351333000,0.0],[1650351413000,0.0],[1650351493000,0.0],[1650351573000,0.0],[1650351653000,0.0],[1650351733000,0.0],[1650351813000,0.0],[1650351893000,0.0],[1650351973000,0.0],[1650352053000,0.0],[1650352133000,0.0],[1650352213000,0.0],[1650352293000,0.0],[1650352373000,0.0],[1650352453000,0.0],[1650352533000,0.0],[1650352613000,0.0],[1650352693000,0.0],[1650352773000,0.0],[1650352853000,0.0],[1650352933000,0.0],[1650353013000,0.0],[1650353093000,0.0],[1650353173000,0.0],[1650353253000,0.0],[1650353333000,0.0],[1650353413000,0.0],[1650353493000,0.0],[1650353573000,0.0],[1650353653000,0.0],[1650353733000,0.0],[1650353813000,0.0],[1650353893000,0.0],[1650353973000,0.0],[1650354053000,0.0],[1650354133000,0.0],[1650354213000,0.0],[1650354293000,0.0],[1650354373000,0.0],[1650354453000,0.0],[1650354533000,0.0],[1650354613000,0.0],[1650354693000,0.0],[1650354773000,0.0],[1650354853000,0.0],[1650354933000,0.0],[1650355013000,0.0],[1650355093000,0.0],[1650355173000,0.0],[1650355253000,0.0],[1650355333000,0.0],[1650355413000,0.0],[1650355493000,0.0],[1650355573000,0.0],[1650355653000,0.0],[1650355733000,0.0],[1650355813000,0.0],[1650355893000,0.0],[1650355973000,0.0],[1650356053000,0.0],[1650356133000,0.0],[1650356213000,0.0],[1650356293000,0.0],[1650356373000,0.0]]}]
                            matrix.forEach((item) => {
                                let tempData = []
                                item.data.forEach(item => {
                                    tempData.push(-Math.abs(item[1]))
                                })
                                let color = '#806eb7'
                                switch (item.name) {
                                    case '1xx':
                                        color = '#6ed0e0'
                                        break;
                                    case '2xx':
                                        color = '#7eb26d'
                                        break;
                                    case '3xx':
                                        color = '#1f78c1'
                                        break;
                                    case '4xx':
                                        color = '#cca300'
                                        break;
                                    case '5xx':
                                        color = '#890f02'
                                        break;
                                }
                                datasets.push({
                                    label: 'backend ' + item.name,
                                    fill: false,
                                    borderColor: color,
                                    backgroundColor: color,
                                    data: tempData,
                                    pointRadius: 0
                                })
                            })

                            var ctx = document.getElementById("myProxyFBChart").getContext('2d')
                            obj.chart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: labels,
                                    datasets: datasets
                                },
                                options: {
                                    responsive: true,
                                    maintainAspectRatio: false,
                                    cubicInterpolationMode: 'monotone',
                                    legendCallback: function (chart) {
                                        var text = []
                                        const tempHtml = '<div style="display: inline-block; width: 105px; color: #33a2e5;"></div> ' +
                                            '<div style="display: inline-block; width: 50px; color: #33a2e5; text-align: right" class="font-weight-bold">min</div> ' +
                                            '<div style="display: inline-block; width: 50px; color: #33a2e5; text-align: right" class="font-weight-bold">max</div> ' +
                                            '<div style="display: inline-block; width: 50px; color: #33a2e5; text-align: right" class="font-weight-bold">avg</div> ' +
                                            '<div style="display: inline-block; width: 50px; color: #33a2e5; text-align: right" class="font-weight-bold">current</div>'
                                        text.push(tempHtml)
                                        for (var i = 0; i < chart.data.datasets.length; i++) {
                                            const nowData = chart.data.datasets[i]
                                            let arr = nowData.data
                                            let min = Math.abs(arr[0])
                                            let max = Math.abs(arr[0])
                                            let average = 0
                                            for(let i = 0; i < arr.length; i++) {
                                                let absArr = Math.abs(arr[i])
                                                if(absArr < min) min = absArr
                                                if(absArr > max) max = absArr
                                                average += absArr
                                            }
                                            average /= arr.length
                                            const current = nowData.data[nowData.data.length - 1]
                                            text.push('<div style="display: inline-block; width: 105px" class="font-weight-bold">' +
                                                 '<span class="mr-1" style="color:' + nowData.borderColor + '">■</span>' + nowData.label + '</div> ' +
                                                '<div style="font-size: 9px; display: inline-block; width: 50px; text-align: right">' + min.toFixed(2) + '</div> ' +
                                                '<div style="font-size: 9px; display: inline-block; width: 50px; text-align: right">' + max.toFixed(2) + '</div> ' +
                                                '<div style="font-size: 9px; display: inline-block; width: 50px; text-align: right">' + Math.round(average, 2).toFixed(2) + '</div> ' +
                                                '<div style="font-size: 9px; display: inline-block; width: 50px; text-align: right">' + Math.abs(current).toFixed(2) + '</div>')
                                        }
                                        return text.join("");
                                    },
                                    title: {
                                        display: true,
                                        text: 'Proxy Total Time'
                                    },
                                    legend: {
                                        display: false

                                    },
                                    tooltips: {
                                        enabled: true,
                                        intersect: false,
                                        titleFontSize: 9,
                                        bodyFontSize: 10,
                                        mode: 'label',
                                        callbacks: {
                                            title: function(tooltipItems) {
                                                const date = new Date(0)
                                                date.setUTCMilliseconds(tooltipItems[0].label)
                                                return moment(date).format('YYYY-MM-DD HH:mm:ss')
                                            },
                                            label: ((tooltipItems, data) => {
                                                return  data.datasets[tooltipItems.datasetIndex].label + ': ' + Math.abs(tooltipItems.value)
                                            })
                                        }
                                    },
                                    scales: {
                                        xAxes: [{
                                            display: true,
                                            gridLines: {
                                                display: false
                                            },
                                            ticks: {
                                                beginAtZero: true,
                                                callback: function (value) {
                                                    const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sep", "Oct", "Nov", "Dec"]
                                                    const date = new Date(value)
                                                    if (obj.selectType === 'day' || obj.selectType === 'days') return date.getDate() + '. ' + monthNames[date.getMonth()]
                                                    else return moment(date).format('HH:mm')
                                                }
                                            },
                                        }],
                                        yAxes: [{
                                            id: 'A',
                                            scaleLabel: {
                                                display: false
                                            },
                                            display: true,
                                            position: 'left',
                                            ticks: {
                                                beginAtZero: false,
                                                callback: function (value) {
                                                    return Math.abs(value)
                                                }
                                            },
                                            gridLines: {
                                                display: true
                                            }
                                        }]
                                    },
                                    elements: {
                                        line: {
                                            borderWidth: 2
                                        },
                                        point: {
                                            radius: 4,
                                            hitRadius: 10,
                                            hoverRadius: 4,
                                            hoverBorderWidth: 3
                                        }
                                    },
                                    interaction: {
                                        mode: 'index'
                                    },
                                    plugins: {
                                        datalabels: {
                                            formatter: function () {
                                                return ''
                                            }
                                        }
                                    }
                                },
                                plugins: {
                                    beforeInit(chart) {
                                        chart.legend.afterFit = function () {
                                            chart.legend.maxHeight = 50
                                            chart.legend.height = 50
                                        }
                                    }
                                }
                            })
                            document.getElementById('my-proxy-fb-legend').innerHTML = obj.chart.generateLegend()
                        }
                    }).catch(function (error) {
                        console.log(error)
                    })
                }
                obj.loading = false
            }).catch(function (error) {
                console.log(error)
            })
        },
        setRange(time, type, step) {
            this.selectTime = time
            this.selectType = type
            this.selectStep = step
        }
    },
    created () {
        this.getFrontendGraph()
    },
    watch: {
        selectRange: function () {
            const rangeList = this.selectRange.split(':')
            this.setRange(rangeList[0], rangeList[1], rangeList[2])
            this.getFrontendGraph()
        },
        namespace: function () {
            this.getFrontendGraph()
        }
    },
    computed: {
    },
    beforeDestroy() {
        clearInterval(this.polling)
    }
}
</script>

<style>
    .my-proxy-fb-legend li {
        display: block;
        color: #6c6c6c;
    }

    .my-proxy-fb-legend li span {
        display: inline-block;
        width: 12px;
        height: 12px;
        margin-right: 5px;
    }

    .my-proxy-fb-legend {
        text-align: left;
    }
</style>


```
