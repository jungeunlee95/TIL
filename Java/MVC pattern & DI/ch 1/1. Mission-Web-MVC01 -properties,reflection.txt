1. Mission-Web-MVC01 -properties,reflection
    : Model View Controller
servlet은 하나고, 이 서블릿에서 uri를 분석해, 각각의 컨트롤러에 보내주면
컨트롤러에서 DB활동을끝내고 다시 컨트롤러, 컨트롤러가 다시 프론트컨트롤러,
프론트컨트롤러가 jsp로, jsp가 C로 응답!

 handleRequest -> interface로 구성!
   ->Controller.java(interface)

 프론트 컨트롤러에 Switch문이 너무 맘에 안들어, 클래스 하나 더 만들자
  =>HandlerMapping.java

HandlerMapping mappings = new HandlerMapping(); -> 얘는 최초의
한번만 호출하면 되잖아 -> init!!!!!!

----------------------------------------------------------------
      properties = 데이터를 저장하는데 
      key=value형태로 저장됨
-> 그냥 MVC01 밑에 bean.properties
-> HandlerMapping에서 각각의uri에 해당하는 Controller를 저장하는 파일
 key=value는 무조건 붙여 써야함! 엔터도 치면 안돼!

----HandlerMapping 에서 try catch문으로 file읽어오는 코드 작성

/board/list.do=kr.co.mlec.ListController
/board/writeForm.do=kr.co.mlec.WriteFormController

왼쪽의 key만 뽑아올수도 ketSet!
오른쪽의 클래스를뽑을수도 getProperty ! 
------------------------------------------------------------------
★reflection★ : KEY에 해당하는 value를 동적으로 가져오기!
  Class<?> clz = Class.forName(className);
  mappings.put(key.toString(), (Controller)clz.newInstance());
                                                        매핑은 무조건 키랑 컨트롤러 객체가져와야해서 형변환!
------------------------------------------------------------------
근데 bean.properties파일 이름이 항상 다 같다는 보장 있어? 없잖아.
web.xml - >  <init-param> 환경설정할거야!
                      init할때 사용하려는 파라미터! 
F.C.S에서 init했을대, 그 파일 가져올 코드 
config.getInitParameter("propName");   
프로그램 실행했을때 이거 가져올거야
그럼 이제 F.C.S에서 
mappings = new HandlerMapping(propName); 이렇게 propName을
핸들러에게 넘겨주면 핸들러에서도 String propName받아서 쓰면 됨 ㅎㅎ

























