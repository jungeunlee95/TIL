4. JSP 기본 요소
   (java server page)   
-> 내부적으로 서블릿 파일인데, 
-> servlet의 화면단 구성의 복잡함 때문에 나오게 됨
-> 편하게 태그들(html,title....)을 쓰고싶어서 -> 화면단 출력이 html과 동일함!

---------------------------------------------------------------------------
   <구성요소>

 HTML 

 지시문(Directive)   :   <%@       %>

 스크립트 :   스크립트릿(scriptlet) :   <%     %>
	  , 표현식(Expression) :  <%=    %>
	  , 선언문(Declaration) : <%!     %>

 주석문 : <%--        --%>

 기본 객체 (Implicit Object) : 변수를 만들지 않아도 사용할수있음 
                                             :request, response, page, application, out, pageContext ...등 9개

 ★표현 언어 (Expression Language)   :  -${}

 ★표준  태그 라이브러리 (JSTL)   :   <c: ....     />,     <fmt : ...       />,  <xml : ...     />

 표준 액션 태그 (Action Tag)    : <jsp: ,,,,   />

 커스텀 태그 (Custom Tag)   : 우린 아마 쓸일없을듯.....


------------------WebContent - jsp - comment -----------------------------
서블릿 : 자바언어 기준 
  JSP : 화면에 출력하는 html문서 기준, -> java코드를 쓸때는 다른코드가 필요함


---------------------------------------------------------------------------
JSP주석문을 쓰는 것이 좋음 -> Web-content에 넣고 직접적인 경로로 접근가능, 
->요즘은 JSP, html 파일들 다 WEB-INF에 넣는게 추세임 <보안위해서>

 <%-- 
 JSP주석문 : 서블릿으로 변환되지 않기 때문에, 웹브라우저에 전송되지 않음   
                      -> 소스보기하면 안보임, jsp->class파일로 변환할때도 class에서 주석 안보임 
 --%> 

 <!--  
 컨텐트 주석문 : 서블릿으로 변환되어 브라우저에 전송이 되지만, 웹브라우저에서 변환되지않아,
                          화면에 출력되지않음  -> 소스보기하면 보임
  -->
-----------------------------------------------------------------------------------
client□     ------------http://.../jsp/hello.jsp 요청 --------------> server□
                                                                                            이렇게 요청이 들어오면 hello.jsp를 찾고, 
				                         곧장 응답하는 것이 아니라, 내부적으로 
                                                                             JSP(.jsp)가 servlet(.java) -> .class 으로 바뀜.
                <----------- .class파일로 변환된 파일 전송 --------------

   근데 보통 C가 S한테 .class로 바뀐 .jsp파일 있어? S한테 있으면 바로 호출시킴,
   근데 .class로 변환된게 없으면 변환시키고, 최초에 요청을 받은 클래스는 2번째부터는 계속 바로 호출
   -> 최초 접속자만 느리고(변환하느라), 그 다음사람부터는 빠름


-----------------------------------------------------------------------------------
  지시문
-------------------
<%@ page, taglib, include %>  
 ex) jsp에서 java임포트할때 <%@ page import = "java.lang.*" %>



---------------------
스크립트 - scriptlet : 스크립트 안에서 java코드를 실행하기 위해 사용
---------------------
  <%  자바실행코드 %>

------------------------------jsp/exam01------------------------------------

1~10사이에 정수 출력


------------------------------jsp/exam02------------------------------------
표현식 Expression
----------------------
<% 
 out.println(num);
%>
↓↓↓↓↓이렇게 간단하게 쓸 수 있음 ↓↓↓↓↓↓↓↓
<%=num %>

ex) <%  String msg = "표현식"; %>     -> 이렇게 선언하고
       <%=   msg %>                                -> 이렇게 프린트     <%= %> 사이에 세미콜론 ㄴㄴ 

ex) 변수값만 곧장 출력하기 위해서 표현식 쓰겠다
  1-10 사이의 총합 : <%= sum %><br> 


------------------------------jsp/exam03------------------------------------
임의의 수 추출
랜덤함수 사용 -> 임포트 -> 귀찮으면 패키지 쓰면 됨
   <%@ page import="java.util.Random" %>     <-page 밑에 임포트 하면 돼
    ★★ ctrl + space 누르면 자동 import됨!


-----------------------------------------
선언문 : 변수 또는 메소드 선언시 사용 <%!     %>   : 거의 사용 안함~
-----------------------------------------

선언문은 class에 선언하는 것이기 때문에 접근제한자 가능





















