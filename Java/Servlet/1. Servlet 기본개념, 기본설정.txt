1. Servlet 기본개념, 기본설정

-> 서버쪽이 목적(클라이언트의 요청을 처리해 알맞은 결과를 C에게 응답해주는 목적)
      -> 응답은 html형식으로 날라감(웹에서 사용하니까)
-> java로 구현된 웹프로그래밍 언어, 
해석을 웹브라우저가 아닌, 서버에서함!   -> 프론트엔드가 아닌, 백엔드에서! 

console창이아닌 웹에서 출력하기 위해서
인터페이스 : Servlet
추상클래스 : GenericServlet
추상클래스 : HttpServlet       -> 3개중 1개를 반드시 상속받아야함 Http가 일반적
 

   <--  서블핏클래스의 기본적인 메소드 호출 순서  -->
1. init (최초 한번만 실행)
2. service (사용자의 요청에 대한 실제 응답처리 진행)
3. destroy (메모리에서 해제될 경우 호출 : 서블릿내용변경 or 서버 재구동등...)
       -> 톰캣서버가 종료하면, 프로그램 종료할때 그 구성들을 관리


 실제 사용자가 쓰는 파일은 .java 인데, 요청 응답은 .class 로 해야됨


 Lecture-Web 안에는 Web-INF 가 있어야함.
 Web_INF 안에는 1.classes폴더 2.lib폴더 3.web.xml파일 이 3가지가 있어야함
 .java가 .class로 변환된 파일은 모두 1.classes폴더 밑에 저장이 됩니당.
       ex) classes 폴더 밑에 servlet.class 파일이 있다고 하면
      호출 : http://localhost:8000/Lecture-Web/WEB-INF/classes/servlet.class 
       이렇게 호출하면 될 것 같지?., 하지만,, 그건 안돼,,★WEB-INF는 보안폴더★야...
      -> 외부에서 요청응답할수없어,, 직접적인 접근이 불가능해,ㅠ ,ㅠ  
      -> 그래서 가상경로를 설정한다 : 서블릿을 web.xml에 등록해 서버에서 특정한 경로를 맵핑하여 호출
      -> http://localhost:8000/Lecture-Web/가상경로/classes/servlet.class
      -> 가상경로로 mapping 시킬거야  --어떻게?--> @(어노테이션) 기법으로!
 

java Resources -> src -> class -> kr.co.mlec.servlet ->
----------------------- HelloServlet --------------------------
 버전 바꿔야함 -> 톰캣파일 c드라이브 프로그램파일 -> 아파츠소프트웨어
 -> 톰캣 -> lib -> servlet-api 복사   -> WEB-INF - lib에 붙이기
 ---> 이렇게 해야지 HttpServlet import 할 수 있음~

----> 가상의 url만들기 -> servlet-mapping  -> web-xml에 가상url등록
web-xml 더블클릭 -> Design/Source -> 소스 클릭  여기에 매핑시키는 것 
  deisplay 와 welcome-file 사이에 -> 내가 쓸 파일 매핑 (확인법 ctrl + 마우스)-> 링크 잡히면 ok
   -> 가상의 url과 매핑 하겠다.  -> <servlet-name>이 class와 url이 한쌍이라는 것을 알려줌
                                                     -> 서블릿 네임 같은 이름으로 써야함
   -> url-pattern ->가상의 이름!!
    -> name만 같으면 url-pattern이 여러개 들어가도 상관없음~
 
  
 
  
  
   
  
   
    
       
         
                
         