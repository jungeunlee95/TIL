 /*
  게시판 테이블명 : t_board
- 글번호 : nu         number(5)
- 제목  : title       varchar2(200)
- 내용  : content     varchar2(4000)
- 조회수 : view_cnt    number(5)
- 등록일 : reg_date    date
*/
create table t_board(
    no          number(5)
    , title       varchar2(200)
    , content     varchar2(4000)
    , view_cnt    number(5)
    , reg_date    date
);

select * from tab;

describe t_board;    --desc t_board;   똑같음 각각의 필드 내용을 보여달란 내용

drop table t_board;

select * from tab;

/* [제약조건 주기]
  게시판 테이블 : t_board
- 글번호 : no         number(5)         중복 허용X!!!, 반드시 존재! 글번호가 존재하지 않으면 안돼
- 제목  : title       varchar2(200)     반드시 존재!
- 내용  : content     varchar2(4000)    생략해도 돼
- 조회수 : view_cnt    number(5)        0으로 초기화
- 등록일 : reg_date    date             현재 시간으로 초기화

default 0    --0으로 집어넣어
default sysdate --년월일시분초를 포함한 현재시간
not null --null값 안돼 반드시 존재해야돼
unique -- 중복되면 안된다

 중복되지 않으면서 반드시 존재해야함
 not null + unique   -> primary key  하나 혹은 두 개의 컬럼을 갖고 조건을 주는 것
*/
 create table t_board (
     no         number(5)      primary key  
  , title       varchar2(200)  not null     
  , content     varchar2(4000) 
  , view_cnt    number(5)      default 0    
  , reg_date    date           default sysdate 
 );
 
 desc t_board;

 rename t_board to board_t;

 desc board_t;
 
 rename board_t to t_board;
 
 desc t_board;
 
 --테이블에 필드 추가. 필드명변경, 필드삭제
 
 create table t_test(
   col_01  varchar2(10)
   , col_02 number
    );
    
    desc t_test;
    
    alter table t_test
     add col_03 varchar2(20);
    
    alter table t_test
     add (col_04 date, col_05 number(2));
    
    alter table t_test
     modify col_03 varchar2(10);
    
    desc t_test;
    
    alter table t_test
     drop column col_04;

    alter table t_test
     rename column col_05 to col_04;

/*
   게시판 INSERT 예제
   번호 : 1
   제목 : 제목1
   내용 : 내용1
   조회수 : 0
   등록일 : 현재날짜
*/

insert into t_board(no, title, content, view_cnt, reg_date)
  values(1, '제목1', '내용1', 0, sysdate);
  
  /*
        insert 예제 2
        번호 : 2
        제목 : 제목2
        내용 : 연습입니다.
        조회수 : 0
        등록일 : 현재날짜
  */
  
 insert into t_board(no, title, content)
  values(2, '제목2', '연습입니다');
 
 insert into t_board(content, no, title)
  values('디폴트 값이 들어갑니다!', 3, '디폴트연습');
 
 
 desc t_board;
 
 insert into t_board
  values(4, '제목4', '컬럼명 생략', 10, sysdate);
 
select * from t_board;

/*
        모든 게시물의 조회수를 100으로 수정해보즈아
*/
 update t_board 
    set view_cnt = 100;
    
    --글번호가 2인 게시물의 조회수를 0으로 수정
 update t_board
    set view_cnt = 0
   where no = 2;

--글번호가 3인 게시물에서 제목을 디폴트연습 -> 변경된제목으로 수정
 update t_board
    set title = '변경된 제목'
  where no = 3;

--글번호가 4인 게시글에서 제목을 '수정된 제목', 내용을 '수정된 내용'으로 변경
 update t_board
    set title = '수정된 제목', content = '수정된 내용'
  where no = 4;

--글번호 2 인 게시글 삭제

 delete from t_board
 where no = 2;
 
 --전체 게시글 삭제
 delete t_board;
 
 --전체 게시물 조회
 select * from t_board;
 
 select no, title
  from t_board;
  
  select no as 글번호, title 제목, content "내        용", view_cnt 조회수, reg_date 등록일
   from t_board;

 select no, view_cnt
   from t_board;
   
 update t_board
   set view_cnt = no *10;
   
--조회수에 100을 더한 "hit 조회수" 컬럼 조회
   select no, view_cnt, view_cnt + 100 as hit조회수
     from t_board;


--조회수 뒤에 00회 붙이고싶어
  select no, view_cnt || '회'
   from t_board;
  
  select no, view_cnt || '번 조회' as 조회수
   from t_board;

--오늘은 7월 18일 입니다.
 select '오늘은 ' || 7 || '월' || 18 || '일 입니다.' as 현재날짜
  from dual;

 select '날짜정보 : ' || sysdate as 날짜정보
   from dual;

select * from tab;
select * from employees;

/*
employees  테이블의 모든 목록을 다음과 같이 조회
King 사원의 사원 번호는 100번이고, 연봉은 24000입니다.
Kochhar사원의 사원번호는 101번이고, 연봉은 17000입니다.
...
..
Gietz사원의 사원번호는 206번이고, 연봉은 8300입니다.
*/

 select last_name || '사원의 사원 번호는' || employee_id || '번이고, 연봉은' || salary || '입니다.' as 사원정보
  from employees;
-- where employee_id = 206; 사원번호 검색 할 때

desc employees;

--employees 테이블에서 연봉이 5000이상인 사원 조회
 select *
  from employees
 where salary >= 5000;
 
 --employees 테이블에서 부서번호가 department_id 80인 사원목록 조회
 select *
  from employees 
 where department_id = 80;

--employees테이블에서 부서번호가 80이 아닌 사원목록 조회
 select *
  from employees 
 where department_id != 80;

--employees 테이블에서 연봉이 10000이상 20000이하
 select *
  from employees 
 where salary >= 10000 and salary <= 20000;
--위 아래 같은 결과/ 작은 수가 무조건 왼쪽
 select *
  from employees 
 where salary between 10000 and 20000;

--employees 테이블에서 연봉이 15000이상이거나 부서번호가 80인 사원목록 조회
 select *
  from employees 
 where salary >= 15000 or department_id = 80;

--부서번호가 80,90,100인 사원 목록 조회
 select *
  from employees 
 where department_id = 80 
    or department_id = 90 
    or department_id = 100;
    
 select *
  from employees 
 where department_id in (80,90,100);
 
--테이블명.컬럼명
-- select employees.department_id, employees.employee_id, employees.last_name, employees.salary  이것만 찍어라 할수도있꼬
select employees.department_id 부서명, employees.*
  from employees 
 where department_id in (80,90,100);

 select e.department_id 부서명, e.*
  from employees e
 where e.department_id in (80,90,100);

--employees 테이블에서 first_name이 peter인 사원 목록을 조회
 select *
  from employees 
 where first_name = 'Peter';
 
 --employees 테이블에서 first_name의 앞글자가 'P'인 사원목록 조회
  select *
  from employees 
 where first_name like 'P%';
 
  --employees 테이블에서 first_name의 앞글자가 'P'면서 5글자인 사원목록 조회
  select *
  from employees 
 where first_name like 'P____';
 
  --employees 테이블에서 first_name의 2번째 글자가 'e'인 사원목록 조회
  select *
  from employees 
 where first_name like '_e%';

  --employees 테이블에서 first_name에 't'가 포함된 사원 목록 조회
  select *
  from employees 
 where first_name like '%t%';
 
 --commission_pct가 없는(null인) 사원을 조회
  select *
  from employees  
  where commission_pct is null;
  
  --커미션 퍼센트를 가지는 사원 목록 조회
  select *
  from employees  
  where commission_pct is not null;
 
 /*
 커미션이 존재하는 사원에 한해서 사원번호,연봉,커미션,보너스 조회
 보너스 = 연봉 * 커미션
 */
  select employee_id, salary, commission_pct, commission_pct*salary as 보너스
  from employees  
  where commission_pct is not null;
 
 --모든 사원의 사원번호,연봉,커미션,보너스 조회 , 커미션이 없는 사원은 커미션,보너스 0으로 nvl()
 --nvl(컬럼명, value) : null값을 임의의 value로 변경하는 함수
 select employee_id, salary, nvl(commission_pct,0)commission_pct , salary * nvl(commission_pct,0) as 보너스
  from employees;
  
 select * 
 from s_emp;
 
 
 