
                                  [ 생성자2-메소드 ]
                  :  인스턴스 객체를 만들 때, 호출되는 메소드
-클래스 명과 이름이 동일
-반환타입이 없음  
-오버로딩을 지원함
    :클래스 내에 메소드 이름이 같고 매개변수의 타입 또는 개수가 다른 것
      ex) class Dog {
                          Dog(){}
                          Dog(String name){}
                          Dog(int age){}
                          ....
                          }
-디폴트생성자
        -클래스내에 생성자가 하나도 없을때 JVM이 자동으로 제공하는 생성자
              ->클래스가 생성자를 하나라도 갖고있으면 자동생성이 안되기때문에 
              ->메인에서 그냥 매개변수가 없는 생성자를 호출해도 안만들어지니까 에러남
        -형태: 매개변수가 없는 형태, 클래스명(){}
        -디폴트처럼 매개변수가 없는 형태 말고, 임의의 값을 갖고 싶을 때  -> 생성자


-★★객체를 생성할 때 속성의 !!초기화!! 를 담당하게 한다. 
 ex)      class Dog {
                          
                          String name;           -> 이상태로는 값을 찍으면 null값
                          int age;                   -> 이상태로는 값을 찍으면 0값
                          ....                            //그냥 공간만 만든거지 값은 다 초기화 상태
                          } 

        ->값을 갖고싶으면 대신 메소드에서 공간을 만들고     
                          Dog d = new Dog(); 
                          d.name="쫑';
                          d.age = 3;       이렇게 값을 대입해야함  

        -> 메인말고 클래스Dog에서 값을 넣을때
                          Dog(String n, int a) {
                                     name = n;
                                     age = a;
                            }

        ->그럼 메인 메소드에서 이렇게 값을 넣어줄 수 있음
        ->메소드에서 공간을 만들면서 동시에 값을 넣어주는거임
            Dog d2 =  new Dog("메리",4);  

-this의 활용: static 영역에서는 사용이 불가능.
  this.멤버변수
  this.메소드이름 가능
  어떤 변수에 접근하려면    =>  객체명.변수
  this는 객체명을 적을 때 나와 같은 객체 안에서 접근할 때만 사용 => ~자기참조변수~ 



